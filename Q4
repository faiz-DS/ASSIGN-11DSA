def find_duplicate_number(nums):
    # Phase 1: Find the intersection point of the two runners.
    slow = nums[0]
    fast = nums[0]

    while True:
        slow = nums[slow]
        fast = nums[nums[fast]]

        if slow == fast:
            break

    # Phase 2: Find the entrance to the cycle.
    slow = nums[0]
    while slow != fast:
        slow = nums[slow]
        fast = nums[fast]

    return slow

# Test cases
print(find_duplicate_number([1, 3, 4, 2, 2]))  # Output: 2
print(find_duplicate_number([3, 1, 3, 4, 2]))  # Output: 3
